#include<stdio.h>  //3
#include<stdlib.h>

struct node {
    int data;
    struct node *prev;
    struct node *next;
    
};

struct node *createNode(int data){
    struct node *newNode=(struct node *)malloc(sizeof(struct node));
    
    newNode->data=data;
    newNode->prev=NULL;
    newNode->next=NULL;
    printf("\n%d node created.",newNode->data);
    return newNode;
}

struct node *buildList(struct node *head,int data){
    
    struct node *temp;
    struct node *newNode=createNode(data);
    
    if(head==NULL){
        head=newNode;
    }
    else{
        temp=head;
        while(temp->next!=NULL){
            temp=temp->next;
        }
        temp->next=newNode;
        newNode->prev=temp;
    }
    printf("\n%d inserted.",newNode->data);
    return head;
    
}

void display(struct node *head){
    
    printf("\nDisplay :");
    struct node *temp=head;
    while(temp!=NULL){
        printf(" %d ",temp->data);
        temp=temp->next;
    }
    
}

struct node * sort(struct node *head){
    
    struct node *p;
    struct node *q;
    int temp;
    
    if(head==NULL || head->next==NULL){
        return head;
    }
    
    for(p=head;p!=NULL;p=p->next){
        for(q=p->next;q!=NULL;q=q->next){
            
            if(p->data > q->data){
                temp=q->data;
                q->data=p->data;
                p->data=temp;
            }
        }
    }
    return head;
    
    
}


struct node *insertafterPosn(struct node *head,int posn,int data){
    struct node *newNode=createNode(data);
    int k=1;
    struct node *temp=head;
    while(temp!=NULL && k!=posn){
        k++;
        temp=temp->next;
    }
    struct node *p=temp->next;
    temp->next=newNode;
    newNode->prev=temp;
    p->prev=newNode;
    newNode->next=p;
    
    return head;
}

struct node *concatenate(struct node *head1,struct node *head2){
    
    struct node *temp=head1;
    while(temp->next!=NULL){
        temp=temp->next;
    }
    temp->next=head2;
    head2->prev=temp;
    return head1;
}



int main(){
    int data,len1,len2;
    struct node *temp=NULL;
    struct node *head1=NULL;
    struct node *head2=NULL;
    
    
    // head=buildList(head,1);
    // head=buildList(head,3);
    // head=buildList(head,8);
    // head=buildList(head,6);
    // display(head);
    // // head=sort(head);
    // // display(head);
    
    // head=insertafterPosn(head,2,4);
    // display(head);
    // head=insertafterPosn(head,4,10);
    // display(head);
    
    
    printf("Enter length of first list : ");
    scanf("%d",&len1);
    
    
    for(int i=0;i<len1;i++){
        printf("\nEnter element %d : ",i+1);
        scanf("%d",&data);
        head1=buildList(head1,data);
        
    }
    printf("List 1: ");
    display(head1);
    
    printf("\n\nEnter length of second list : ");
    scanf("%d",&len2);
    
    for(int i=0;i<len2;i++){
        printf("\nEnter element %d : ",i+1);
        scanf("%d",&data);
        head2=buildList(head2,data);
        
    }
    printf("List 2: ");
    display(head2);
    
    
    struct node *conHead=concatenate(head1,head2);
    display(conHead);
    
    
    
    
    
    
    
    
    
    
}
